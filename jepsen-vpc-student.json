{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Jepsen VPC Student",
  "Parameters": {
    "ImageId": {
      "Type": "String"
    },
    "KeyName": {
      "Type": "String"
    },
    "Bucket": {
      "Type": "String"
    },
    "ControlInstanceType": {
      "Type": "String"
    },
    "WorkerInstanceType": {
      "Type": "String"
    },
    "ControlDiskSize": {
      "Type": "Number"
    },
    "WorkerDiskSize": {
      "Type": "Number"
    },
    "VpcId": {
      "Type": "String"
    },
    "SecGroupAccess": {
      "Type": "String"
    },
    "RouteTable": {
      "Type": "String"
    },
    "SubnetNumber": {
      "Type": "String"
    }
  },
  "Resources": {
    "subnet": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": { "Fn::Join": [ "", [ "192.168.", { "Ref": "SubnetNumber" }, ".0/24" ] ] },
        "VpcId": { "Ref": "VpcId" }
      }
    },
    "route": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": { "Ref": "RouteTable" },
        "SubnetId": { "Ref": "subnet" }
      }
    },
    "secgroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Student Cluster",
        "VpcId": { "Ref": "VpcId" }
      }
    },
    "ingress1": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": { "Ref": "secgroup" },
        "IpProtocol": "-1",
        "SourceSecurityGroupId": { "Ref": "secgroup" }
      }
    },
    "ingress2": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": { "Ref": "secgroup" },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "SourceSecurityGroupId": { "Ref": "SecGroupAccess" }
      }
    },
    "ingress3": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": { "Ref": "secgroup" },
        "IpProtocol": "icmp",
        "FromPort": "-1",
        "ToPort": "-1",
        "SourceSecurityGroupId": { "Ref": "SecGroupAccess" }
      }
    },
    "egress1": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": { "Ref": "secgroup" },
        "IpProtocol": "-1",
        "CidrIp": "0.0.0.0/0"
      }
    },
    "controlWaitHandle": {
      "Type": "AWS::CloudFormation::WaitConditionHandle",
      "Properties": { }
    },
    "controlWaitCondition": {
      "Type": "AWS::CloudFormation::WaitCondition",
      "Properties": {
        "Handle": { "Ref": "controlWaitHandle" },
	"Timeout": "600",
	"Count": "1"
      }
    },
    "control": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "ImageId": { "Ref": "ImageId" },
        "InstanceType": { "Ref": "ControlInstanceType" },
        "KeyName": { "Ref": "KeyName" },
        "SecurityGroupIds": [ { "Ref": "secgroup" } ],
        "SubnetId": { "Ref": "subnet" },
        "PrivateIpAddress": { "Fn::Join": [ "", [ "192.168.", { "Ref": "SubnetNumber" }, ".100" ] ] },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": { "VolumeSize": { "Ref": "ControlDiskSize" } }
          }
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash -xe\n",
                "echo 192.168.", { "Ref": "SubnetNumber" }, ".101 db1 >> /etc/hosts\n",
                "echo 192.168.", { "Ref": "SubnetNumber" }, ".102 db2 >> /etc/hosts\n",
                "echo 192.168.", { "Ref": "SubnetNumber" }, ".103 db3 >> /etc/hosts\n",
                "echo 192.168.", { "Ref": "SubnetNumber" }, ".104 db4 >> /etc/hosts\n",
                "echo 192.168.", { "Ref": "SubnetNumber" }, ".105 db5 >> /etc/hosts\n",
                "echo db1 > /home/admin/nodes\n",
                "echo db2 >> /home/admin/nodes\n",
                "echo db3 >> /home/admin/nodes\n",
                "echo db4 >> /home/admin/nodes\n",
                "echo db5 >> /home/admin/nodes\n",
                "chmod 444 /home/admin/nodes\n",
                "chown admin:admin /home/admin/nodes\n",
                "rm -f /home/admin/.ssh/id_rsa*\n",
                "ssh-keygen -b 2048 -t rsa -f /home/admin/.ssh/id_rsa -q -N ''\n",
                "chown admin:admin /home/admin/.ssh/*\n",
                "cp /home/admin/.ssh/id_rsa.pub id_rsa.pub.", { "Ref": "SubnetNumber" }, "\n",
                "aws s3 cp id_rsa.pub.", { "Ref": "SubnetNumber" }, " s3://", { "Ref": "Bucket" }, "\n",
		"apt-get -y update\n",
		"apt-get -y install python-setuptools\n",
		"easy_install https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-latest.tar.gz\n",
		"cfn-signal \"", { "Ref": "controlWaitHandle" }, "\" \n"
              ]
            ]
          }
        }
      }
    },
    "db1": {
      "Type": "AWS::EC2::Instance",
      "DependsOn": "controlWaitCondition",
      "Properties": {
        "ImageId": { "Ref": "ImageId" },
        "InstanceType": { "Ref": "WorkerInstanceType" },
        "KeyName": { "Ref": "KeyName" },
        "SecurityGroupIds": [ { "Ref": "secgroup" } ],
        "SubnetId": { "Ref": "subnet" },
        "PrivateIpAddress": { "Fn::Join": [ "", [ "192.168.", { "Ref": "SubnetNumber" }, ".101" ] ] },
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/xvda",
            "Ebs": { "VolumeSize": { "Ref": "WorkerDiskSize" } }
          }
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash -xe\n",
		"apt-get -y update\n",
                "aws s3 cp s3://", { "Ref": "Bucket" }, "/id_rsa.pub.", { "Ref": "SubnetNumber" }, " controlkey \n",
		"cat controlkey >> /home/admin/.ssh/authorized_keys\n",
                "chown admin:admin /home/admin/.ssh/*\n"
              ]
            ]
          }
        }
      }
    }
  }
}
